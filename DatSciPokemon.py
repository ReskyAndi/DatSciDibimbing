# -*- coding: utf-8 -*-
"""LatihanDibimbingResky.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MkSFPTyQ9i1a6oZMd4Lb0VemuKL4Pp49
"""

import pandas as pd
#Import Pandas untuk penggunaan DataFrame
import numpy as np
#Import NumpPy untuk mempermudah analisis
import matplotlib.pyplot as plt
#Import Matplotlib untuk membuat plot data
import seaborn as sns


df = pd.read_csv('Pokemon.csv')
data = pd.DataFrame(df)

#Print "data"
data_new = data[['Type 1', 'Type 2', 'Total','HP','Attack','Defense', 'Sp. Atk', 'Sp. Def', 'Speed']]
new_data = data_new.copy()
new_data = new_data.fillna('Unidentified')
#Mengganti data yang kosong menjadi "Unidentified"
new_data

data.info()
#Menampilkan informasi database
print()
data.describe()
#Menampilkan ringkasan statistika

data1 = new_data.groupby("Type 1").mean()
#Menghitung rata-rata pada Tipe 1 berdasarkan kategori masing-masing
round_data1 = round(data1, 2)
#Membulatkan hasil rata-rata dengan 2 bilangan di belakang koma
print("Hasil rata-rata pada Tipe 1 : ")
print(round_data1)
print()
data2 = new_data.groupby("Type 2").mean()
round_data2 = round(data2, 2)
print("Hasil rata-rata pada Tipe 2 : ")
print(round_data2)
print()
data1std = new_data.groupby("Type 1").std()
#Menghitung standar deviasi pada Tipe 1 berdasarkan kategori masing-masing
round_data1std = round(data1std, 2)
#Membulatkan hasil standar deviasi dengan 2 bilangan di belakang koma
print("Hasil standar deviasi pada Tipe 1 : ")
print(round_data1std)
print()
data2std = new_data.groupby("Type 2").std()
print("Hasil standar deviasi pada Tipe 2 : ")
round_data2std = round(data2std, 2)
print(round_data2std)

#Total Data 1

total_data1 = round_data1['Total'].to_numpy()

data_type1 = np.array(data1.index)
data_type1_sorting = sorted(data_type1)


combined_array_total1 = np.stack((total_data1,data_type1), axis=1)
sorting_total1 = np.argsort(combined_array_total1[:,0])[::-1]
sorted_total1 = combined_array_total1[sorting_total1]
df_sorted_total1 = pd.DataFrame(sorted_total1)
df_sorted_total1.columns = ['Value', 'Category']
print("Data terurut :")
print(df_sorted_total1)
print()


max_sorted_total1 = df_sorted_total1.iloc[0]
print("Nilai Rata-rata Maksimal :")
print(max_sorted_total1)

min_sorted_total1 = df_sorted_total1.iloc[-1]
print("Nilai Rata-rata Minimal :")
print(min_sorted_total1)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_total1, x='Value', y='Category')
for index, value in enumerate(df_sorted_total1['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Total Pokemon dalam Tipe 1')
plt.show()

total_data1std = round_data1std['Total'].to_numpy()


combined_array_total1std = np.stack((total_data1std,data_type1), axis=1)
sorting_total1std = np.argsort(combined_array_total1std[:,0])[::-1]
sorted_total1std = combined_array_total1std[sorting_total1std]
df_sorted_total1std = pd.DataFrame(sorted_total1std)
df_sorted_total1std.columns = ['Value', 'Category']
print("Data terurut :")
print(df_sorted_total1std)
print()

max_sorted_total1std = df_sorted_total1std.iloc[0]
print("Nilai Standar Maksimal :")
print( max_sorted_total1std)
print()
min_sorted_total1std = df_sorted_total1std.iloc[-1]
print("Nilai Standar Deviasi Minimal :")
print(min_sorted_total1std)


plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_total1std, x='Value', y='Category')
for index, value in enumerate(df_sorted_total1std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Total Pokemon dalam Tipe 1')
plt.show()

combined_array_total1_alph = np.stack((data_type1,total_data1), axis=1)
sorting_total1_alph = np.argsort(combined_array_total1_alph[:,0])[::1]
sorted_total1_alph = combined_array_total1_alph[sorting_total1_alph]
df_sorted_total1_alph = pd.DataFrame(sorted_total1_alph)
df_sorted_total1_alph.columns = ['Category', 'Value']

combined_array_total1std_alph = np.stack((data_type1,total_data1std), axis=1)
sorting_total1std_alph = np.argsort(combined_array_total1std_alph[:,0])[::1]
sorted_total1std_alph = combined_array_total1std_alph[sorting_total1std_alph]
df_sorted_total1std_alph = pd.DataFrame(sorted_total1std_alph)
df_sorted_total1std_alph.columns = ['Category', 'Value']


comparison_data_total1 = pd.concat([df_sorted_total1_alph, df_sorted_total1std_alph], axis = 1)
comparison_data_total1.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_total1 = comparison_data_total1.drop('Category SD', axis = 1)

comparison_data_total1

sort_column_total1 = 'Mean'
mean_sorted_comparison_data_total1 = comparison_data_total1.sort_values(by=sort_column_total1, ascending=True)
mean_sorted_comparison_data_total1a = comparison_data_total1.sort_values(by=sort_column_total1, ascending=False)
print("Data terurut berdasarkan Mean : ")
mean_sorted_comparison_data_total1a

sort_column_total1 = 'Standar Deviasi'
std_sorted_comparison_data_total1 = comparison_data_total1.sort_values(by=sort_column_total1, ascending=True)
std_sorted_comparison_data_total1a = comparison_data_total1.sort_values(by=sort_column_total1, ascending=False)
print("Data terurut berdasarkan Standar Deviasi : ")
std_sorted_comparison_data_total1a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_total1.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Total di Type 1')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(15, 6))
plt.errorbar(data_type1, total_data1, yerr=total_data1std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Total Pokemon dalam Tipe 1')

# Display the plot

plt.show()

#Total Data 2

total_data2 = round_data2['Total'].to_numpy()
data_type2 = np.array(data2.index)


combined_array_total2 = np.stack((total_data2,data_type2), axis=1)
sorting_total2 = np.argsort(combined_array_total2[:,0])[::-1]
sorted_total2 = combined_array_total2[sorting_total2]
df_sorted_total2 = pd.DataFrame(sorted_total2)
df_sorted_total2.columns = ['Value', 'Category']

print("Data terurut :")
print(df_sorted_total2)
print()
max_sorted_total2 = df_sorted_total2.iloc[0]
print("Nilai Data Rata-Rata Total Maksimal :")
print(max_sorted_total2)
print()
min_sorted_total2 = df_sorted_total2.iloc[-1]
print("Nilai Data Rata-Rata Total Minimal :")
print(min_sorted_total2)

plt.figure(figsize=(20, 8))
sns.barplot(data=df_sorted_total2, x='Value', y='Category')
for index, value in enumerate(df_sorted_total2['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Total Pokemon dalam Tipe 2')
plt.show()

total_data2std = round_data2std['Total'].to_numpy()


combined_array_total2std = np.stack((total_data2std,data_type2), axis=1)
sorting_total2std = np.argsort(combined_array_total2std[:,0])[::-1]
sorted_total2std = combined_array_total2std[sorting_total2std]
df_sorted_total2std = pd.DataFrame(sorted_total2std)
df_sorted_total2std.columns = ['Value', 'Category']

print("Data Terurut :")
print(df_sorted_total2std)

print()
max_sorted_total2std = df_sorted_total2std.iloc[0]
print("Nilai Data Rata-Rata Total Maksimal :")
print(max_sorted_total2std)
print()
min_sorted_total2std = df_sorted_total2std.iloc[-1]
print("Nilai Data Rata-Rata Total Minimal :")
print(min_sorted_total2std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_total2std, x='Value', y='Category')
for index, value in enumerate(df_sorted_total2std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Total Pokemon dalam Tipe 2')
plt.show()

combined_array_total2_alph = np.stack((data_type2,total_data2), axis=1)
sorting_total2_alph = np.argsort(combined_array_total2_alph[:,0])[::1]
sorted_total2_alph = combined_array_total2_alph[sorting_total2_alph]
df_sorted_total2_alph = pd.DataFrame(sorted_total2_alph)
df_sorted_total2_alph.columns = ['Category', 'Value']

combined_array_total2std_alph = np.stack((data_type2,total_data2std), axis=1)
sorting_total2std_alph = np.argsort(combined_array_total2std_alph[:,0])[::1]
sorted_total2std_alph = combined_array_total2std_alph[sorting_total2std_alph]
df_sorted_total2std_alph = pd.DataFrame(sorted_total2std_alph)
df_sorted_total2std_alph.columns = ['Category', 'Value']


comparison_data_total2 = pd.concat([df_sorted_total2_alph, df_sorted_total2std_alph], axis = 1)
comparison_data_total2.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_total2 = comparison_data_total2.drop('Category SD', axis = 1)

comparison_data_total2

sort_column_total2 = 'Mean'
mean_sorted_comparison_data_total2 = comparison_data_total2.sort_values(by=sort_column_total2, ascending=True)
mean_sorted_comparison_data_total2a = comparison_data_total2.sort_values(by=sort_column_total2, ascending=False)
mean_sorted_comparison_data_total2a

sort_column_total2 = 'Standar Deviasi'
std_sorted_comparison_data_total2 = comparison_data_total1.sort_values(by=sort_column_total1, ascending=True)
std_sorted_comparison_data_total2a = comparison_data_total1.sort_values(by=sort_column_total1, ascending=False)
std_sorted_comparison_data_total2a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_total2.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Total di Type 2')
plt.legend(['Mean', 'Standar Deviasi'], loc = 'lower right')
plt.show()

plt.figure(figsize=(20, 6))
plt.errorbar(data_type2, total_data2, yerr=total_data2std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Total Pokemon dalam Tipe 2')

# Display the plot

plt.show()

#HP Data 1

HP_data1 = round_data1['HP'].to_numpy()



combined_array_HP1 = np.stack((HP_data1,data_type1), axis=1)
sorting_HP1 = np.argsort(combined_array_HP1[:,0])[::-1]
sorted_HP1 = combined_array_HP1[sorting_HP1]
df_sorted_HP1 = pd.DataFrame(sorted_HP1)
df_sorted_HP1.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_HP1)

print()
max_sorted_HP1 = df_sorted_HP1.iloc[0]
print("Nilai Data Rata-Rata HP Maksimal :")
print(max_sorted_HP1)
print()
min_sorted_HP1 = df_sorted_HP1.iloc[-1]
print("Nilai Data Rata-Rata HP Minimal :")
print(min_sorted_HP1)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_HP1, x='Value', y='Category')
for index, value in enumerate(df_sorted_HP1['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata HP Pokemon dalam Tipe 1')
plt.show()

HP_data1std = round_data1std['HP'].to_numpy()


combined_array_HP1std = np.stack((HP_data1std,data_type1), axis=1)
sorting_HP1std = np.argsort(combined_array_HP1std[:,0])[::-1]
sorted_HP1std = combined_array_HP1std[sorting_HP1std]
df_sorted_HP1std = pd.DataFrame(sorted_HP1std)
df_sorted_HP1std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_HP1std)

print()
max_sorted_HP1std = df_sorted_HP1std.iloc[0]
print("Nilai Data Standar Deviasi HP Maksimal :")
print(max_sorted_HP1std)
print()
min_sorted_HP1std = df_sorted_HP1std.iloc[-1]
print("Nilai Data Standar Deviasi HP Minimal :")
print(min_sorted_HP1std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_HP1std, x='Value', y='Category')
for index, value in enumerate(df_sorted_HP1std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi HP Pokemon dalam Tipe 1')
plt.show()

combined_array_HP1_alph = np.stack((data_type1,HP_data1), axis=1)
sorting_HP1_alph = np.argsort(combined_array_HP1_alph[:,0])[::1]
sorted_HP1_alph = combined_array_HP1_alph[sorting_HP1_alph]
df_sorted_HP1_alph = pd.DataFrame(sorted_HP1_alph)
df_sorted_HP1_alph.columns = ['Category', 'Value']

combined_array_HP1std_alph = np.stack((data_type1, HP_data1std), axis=1)
sorting_HP1std_alph = np.argsort(combined_array_HP1std_alph[:,0])[::1]
sorted_HP1std_alph = combined_array_HP1std_alph[sorting_HP1std_alph]
df_sorted_HP1std_alph = pd.DataFrame(sorted_HP1std_alph)
df_sorted_HP1std_alph.columns = ['Category', 'Value']


comparison_data_HP1 = pd.concat([df_sorted_HP1_alph, df_sorted_HP1std_alph], axis = 1)
comparison_data_HP1.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_HP1 = comparison_data_HP1.drop('Category SD', axis = 1)

comparison_data_HP1

sort_column_HP1 = 'Mean'
mean_sorted_comparison_data_HP1 = comparison_data_HP1.sort_values(by=sort_column_HP1, ascending=True)
mean_sorted_comparison_data_HP1a = comparison_data_Spd2.sort_values(by=sort_column_HP1, ascending=False)
mean_sorted_comparison_data_HP1a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_HP1.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data HP di Type 1')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(15, 6))
plt.errorbar(data_type1, HP_data1, yerr=HP_data1std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data HP Pokemon dalam Tipe 1')

# Display the plot

plt.show()

#HP Data 2

HP_data2 = round_data2['HP'].to_numpy()


combined_array_HP2 = np.stack((HP_data2,data_type2), axis=1)
sorting_HP2 = np.argsort(combined_array_HP2[:,0])[::-1]
sorted_HP2 = combined_array_HP2[sorting_HP2]
df_sorted_HP2 = pd.DataFrame(sorted_HP2)
df_sorted_HP2.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_HP2)

print()
max_sorted_HP2 = df_sorted_HP2.iloc[0]
print("Nilai Data Rata-Rata HP Maksimal :")
print(max_sorted_HP2)
print()
min_sorted_HP2 = df_sorted_HP2.iloc[-1]
print("Nilai Data Rata-Rata HP Minimal :")
print(min_sorted_HP2)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_HP2, x='Value', y='Category')
for index, value in enumerate(df_sorted_HP2['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Total Pokemon dalam Tipe 2')
plt.show()

HP_data2std = round_data2std['HP'].to_numpy()


combined_array_HP2std = np.stack((HP_data2std,data_type2), axis=1)
sorting_HP2std = np.argsort(combined_array_HP2std[:,0])[::-1]
sorted_HP2std = combined_array_HP2std[sorting_HP2std]
df_sorted_HP2std = pd.DataFrame(sorted_HP2std)
df_sorted_HP2std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_HP2std)

print()
max_sorted_HP2std = df_sorted_HP2std.iloc[0]
print("Nilai Standar Deviasi HP Maksimal :")
print(max_sorted_HP2std)
print()
min_sorted_HP2std = df_sorted_HP2std.iloc[-1]
print("Nilai Data Standar Deviasi HP Minimal :")
print(min_sorted_HP2std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_HP2std, x='Value', y='Category')
for index, value in enumerate(df_sorted_HP2std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi HP Pokemon dalam Tipe 2')
plt.show()

combined_array_HP2_alph = np.stack((data_type2,HP_data2), axis=1)
sorting_HP2_alph = np.argsort(combined_array_HP2_alph[:,0])[::1]
sorted_HP2_alph = combined_array_HP2_alph[sorting_HP2_alph]
df_sorted_HP2_alph = pd.DataFrame(sorted_HP2_alph)
df_sorted_HP2_alph.columns = ['Category', 'Value']

combined_array_HP2std_alph = np.stack((data_type2,HP_data2std), axis=1)
sorting_HP2std_alph = np.argsort(combined_array_HP2std_alph[:,0])[::1]
sorted_HP2std_alph = combined_array_HP2std_alph[sorting_HP2std_alph]
df_sorted_HP2std_alph = pd.DataFrame(sorted_HP2std_alph)
df_sorted_HP2std_alph.columns = ['Category', 'Value']


comparison_data_HP2 = pd.concat([df_sorted_HP2_alph, df_sorted_HP2std_alph], axis = 1)
comparison_data_HP2.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_HP2 = comparison_data_HP2.drop('Category SD', axis = 1)

comparison_data_HP2

sort_column_HP2 = 'Mean'
mean_sorted_comparison_data_HP2 = comparison_data_HP2.sort_values(by=sort_column_HP2, ascending=True)
mean_sorted_comparison_data_HP2a = comparison_data_HP2.sort_values(by=sort_column_HP2, ascending=False)
mean_sorted_comparison_data_HP2a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_HP2.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data HP di Type 1')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(20, 6))
plt.errorbar(data_type2, HP_data2, yerr=HP_data2std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data HP Pokemon dalam Tipe 2')

# Display the plot

plt.show()

#Attack Data 1

Atk_data1 = round_data1['Attack'].to_numpy()



combined_array_Atk1 = np.stack((Atk_data1,data_type1), axis=1)
sorting_Atk1 = np.argsort(combined_array_Atk1[:,0])[::-1]
sorted_Atk1 = combined_array_Atk1[sorting_Atk1]
df_sorted_Atk1 = pd.DataFrame(sorted_Atk1)
df_sorted_Atk1.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Atk1)

print()
max_sorted_Atk1 = df_sorted_Atk1.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Atk1)
print()
min_sorted_Atk1 = df_sorted_Atk1.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Atk1)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Atk1, x='Value', y='Category')
for index, value in enumerate(df_sorted_Atk1['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Attack Pokemon dalam Tipe 1')
plt.show()

Atk_data1std = round_data1std['Attack'].to_numpy()


combined_array_Atk1std = np.stack((Atk_data1std,data_type1), axis=1)
sorting_Atk1std = np.argsort(combined_array_Atk1std[:,0])[::-1]
sorted_Atk1std = combined_array_Atk1std[sorting_Atk1std]
df_sorted_Atk1std = pd.DataFrame(sorted_Atk1std)
df_sorted_Atk1std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Atk1std)

print()
max_sorted_Atk1std = df_sorted_Atk1std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Atk1std)
print()
min_sorted_Atk1std = df_sorted_Atk1std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Atk1std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Atk1std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Atk1std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Attack Pokemon dalam Tipe 1')
plt.show()

combined_array_Atk1_alph = np.stack((data_type1,Atk_data1), axis=1)
sorting_Atk1_alph = np.argsort(combined_array_Atk1_alph[:,0])[::1]
sorted_Atk1_alph = combined_array_Atk1_alph[sorting_Atk1_alph]
df_sorted_Atk1_alph = pd.DataFrame(sorted_Atk1_alph)
df_sorted_Atk1_alph.columns = ['Category', 'Value']

combined_array_Atk1std_alph = np.stack((data_type1,Atk_data1std), axis=1)
sorting_Atk1std_alph = np.argsort(combined_array_Atk1std_alph[:,0])[::1]
sorted_Atk1std_alph = combined_array_Atk1std_alph[sorting_Atk1std_alph]
df_sorted_Atk1std_alph = pd.DataFrame(sorted_Atk1std_alph)
df_sorted_Atk1std_alph.columns = ['Category', 'Value']


comparison_data_Atk1 = pd.concat([df_sorted_Atk1_alph, df_sorted_Atk1std_alph], axis = 1)
comparison_data_Atk1.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_Atk1 = comparison_data_Atk1.drop('Category SD', axis = 1)

comparison_data_Atk1

sort_column_Atk1 = 'Mean'
mean_sorted_comparison_data_Atk1 = comparison_data_Atk1.sort_values(by=sort_column_Atk1, ascending=True)
mean_sorted_comparison_data_Atk1a = comparison_data_Atk1.sort_values(by=sort_column_Atk1, ascending=False)
mean_sorted_comparison_data_Atk1a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Atk1.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Attack di Type 1')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(15, 6))
plt.errorbar(data_type1, Atk_data1, yerr=Atk_data1std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Attack Pokemon dalam Tipe 1')

# Display the plot

plt.show()

#Attack Data 2

Atk_data2 = round_data2['Attack'].to_numpy()


combined_array_Atk2 = np.stack((Atk_data2,data_type2), axis=1)
sorting_Atk2 = np.argsort(combined_array_Atk2[:,0])[::-1]
sorted_Atk2 = combined_array_Atk2[sorting_Atk2]
df_sorted_Atk2 = pd.DataFrame(sorted_Atk2)
df_sorted_Atk2.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Atk2)

print()
max_sorted_Atk2 = df_sorted_Atk2.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Atk2)
print()
min_sorted_Atk2 = df_sorted_Atk2.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Atk2)
plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Atk2, x='Value', y='Category')
for index, value in enumerate(df_sorted_Atk2['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Attack Pokemon dalam Tipe 2')
plt.show()

Atk_data2std = round_data2std['Attack'].to_numpy()


combined_array_Atk2std = np.stack((Atk_data2std,data_type2), axis=1)
sorting_Atk2std = np.argsort(combined_array_Atk2std[:,0])[::-1]
sorted_Atk2std = combined_array_Atk2std[sorting_Atk2std]
df_sorted_Atk2std = pd.DataFrame(sorted_Atk2std)
df_sorted_Atk2std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Atk2std)

print()
max_sorted_Atk2std = df_sorted_Atk2std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Atk2std)
print()
min_sorted_Atk2std = df_sorted_Atk2std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Atk2std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Atk2std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Atk2std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Attack Pokemon dalam Tipe 2')
plt.show()

combined_array_Atk2_alph = np.stack((data_type2,Atk_data2), axis=1)
sorting_Atk2_alph = np.argsort(combined_array_Atk2_alph[:,0])[::1]
sorted_Atk2_alph = combined_array_Atk2_alph[sorting_Atk2_alph]
df_sorted_Atk2_alph = pd.DataFrame(sorted_Atk2_alph)
df_sorted_Atk2_alph.columns = ['Category', 'Value']

combined_array_Atk2std_alph = np.stack((data_type2,Atk_data2std), axis=1)
sorting_Atk2std_alph = np.argsort(combined_array_Atk2std_alph[:,0])[::1]
sorted_Atk2std_alph = combined_array_Atk2std_alph[sorting_Atk2std_alph]
df_sorted_Atk2std_alph = pd.DataFrame(sorted_Atk2std_alph)
df_sorted_Atk2std_alph.columns = ['Category', 'Value']


comparison_data_Atk2 = pd.concat([df_sorted_Atk2_alph, df_sorted_Atk2std_alph], axis = 1)
comparison_data_Atk2.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_Atk2 = comparison_data_Atk2.drop('Category SD', axis = 1)

comparison_data_Atk2

sort_column_Atk2 = 'Mean'
mean_sorted_comparison_data_Atk2 = comparison_data_Atk2.sort_values(by=sort_column_Atk2, ascending=True)
mean_sorted_comparison_data_Atk2a = comparison_data_Atk2.sort_values(by=sort_column_Atk2, ascending=False)
mean_sorted_comparison_data_Atk2a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Atk2.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Attack di Type 2')
plt.legend(['Mean', 'Standar Deviasi'], loc = 'lower right')
plt.show()

plt.figure(figsize=(20, 6))
plt.errorbar(data_type2, Atk_data2, yerr=Atk_data2std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Attack Pokemon dalam Tipe 2')

# Display the plot

plt.show()

#Defense Data 1

Def_data1 = round_data1['Defense'].to_numpy()



combined_array_Def1 = np.stack((Def_data1,data_type1), axis=1)
sorting_Def1 = np.argsort(combined_array_Def1[:,0])[::-1]
sorted_Def1 = combined_array_Def1[sorting_Def1]
df_sorted_Def1 = pd.DataFrame(sorted_Def1)
df_sorted_Def1.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Def1)

print()
max_sorted_Def1 = df_sorted_Def1.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Def1)
print()
min_sorted_Def1 = df_sorted_Def1.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Def1)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Def1, x='Value', y='Category')
for index, value in enumerate(df_sorted_Def1['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Defense Pokemon dalam Tipe 1')
plt.show()

Def_data1std = round_data1std['Defense'].to_numpy()


combined_array_Def1std = np.stack((Def_data1std,data_type1), axis=1)
sorting_Def1std = np.argsort(combined_array_Def1std[:,0])[::-1]
sorted_Def1std = combined_array_Def1std[sorting_Def1std]
df_sorted_Def1std = pd.DataFrame(sorted_Def1std)
df_sorted_Def1std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Def1std)

print()
max_sorted_Def1std = df_sorted_Def1std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Def1std)
print()
min_sorted_Def1std = df_sorted_Def1std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Def1std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Def1std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Def1std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Defense Pokemon dalam Tipe 1')
plt.show()

combined_array_Def1_alph = np.stack((data_type1,Def_data1), axis=1)
sorting_Def1_alph = np.argsort(combined_array_Def1_alph[:,0])[::1]
sorted_Def1_alph = combined_array_Def1_alph[sorting_Def1_alph]
df_sorted_Def1_alph = pd.DataFrame(sorted_Def1_alph)
df_sorted_Def1_alph.columns = ['Category', 'Value']

combined_array_Def1std_alph = np.stack((data_type1,Def_data1std), axis=1)
sorting_Def1std_alph = np.argsort(combined_array_Def1std_alph[:,0])[::1]
sorted_Def1std_alph = combined_array_Def1std_alph[sorting_Def1std_alph]
df_sorted_Def1std_alph = pd.DataFrame(sorted_Def1std_alph)
df_sorted_Def1std_alph.columns = ['Category', 'Value']


comparison_data_Def1 = pd.concat([df_sorted_Def1_alph, df_sorted_Def1std_alph], axis = 1)
comparison_data_Def1.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_Def1 = comparison_data_Def1.drop('Category SD', axis = 1)

comparison_data_Def1

sort_column_Def1 = 'Mean'
mean_sorted_comparison_data_Def1 = comparison_data_Def1.sort_values(by=sort_column_Def1, ascending=True)
mean_sorted_comparison_data_Def1a = comparison_data_Def1.sort_values(by=sort_column_Def1, ascending=False)
mean_sorted_comparison_data_Def1a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Def1.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Defense di Type 1')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(15, 6))
plt.errorbar(data_type1, Def_data1, yerr=Def_data1std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Defense Pokemon dalam Tipe 1')

# Display the plot

plt.show()

#Defense Data 2

Def_data2 = round_data2['Defense'].to_numpy()



combined_array_Def2 = np.stack((Def_data2,data_type2), axis=1)
sorting_Def2 = np.argsort(combined_array_Def2[:,0])[::-1]
sorted_Def2 = combined_array_Def2[sorting_Def2]
df_sorted_Def2 = pd.DataFrame(sorted_Def2)
df_sorted_Def2.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Def2)

print()
max_sorted_Def2 = df_sorted_Def2.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Def2)
print()
min_sorted_Def2 = df_sorted_Def2.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Def2)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Def2, x='Value', y='Category')
for index, value in enumerate(df_sorted_Def2['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Defense Pokemon dalam Tipe 2')
plt.show()

Def_data2std = round_data2std['Defense'].to_numpy()


combined_array_Def2std = np.stack((Def_data2std,data_type2), axis=1)
sorting_Def2std = np.argsort(combined_array_Def2std[:,0])[::-1]
sorted_Def2std = combined_array_Def2std[sorting_Def2std]
df_sorted_Def2std = pd.DataFrame(sorted_Def2std)
df_sorted_Def2std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Def2std)

print()
max_sorted_Def2std = df_sorted_Def2std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Def2std)
print()
min_sorted_Def2std = df_sorted_Def2std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Def2std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Def2std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Def2std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Defense Pokemon dalam Tipe 2')
plt.show()

combined_array_Def2_alph = np.stack((data_type2,Def_data2), axis=1)
sorting_Def2_alph = np.argsort(combined_array_Def2_alph[:,0])[::1]
sorted_Def2_alph = combined_array_Def2_alph[sorting_Def2_alph]
df_sorted_Def2_alph = pd.DataFrame(sorted_Def2_alph)
df_sorted_Def2_alph.columns = ['Category', 'Value']

combined_array_Def2std_alph = np.stack((data_type2,Def_data2std), axis=1)
sorting_Def2std_alph = np.argsort(combined_array_Def2std_alph[:,0])[::1]
sorted_Def2std_alph = combined_array_Def2std_alph[sorting_Def2std_alph]
df_sorted_Def2std_alph = pd.DataFrame(sorted_Def2std_alph)
df_sorted_Def2std_alph.columns = ['Category', 'Value']


comparison_data_Def2 = pd.concat([df_sorted_Def2_alph, df_sorted_Def2std_alph], axis = 1)
comparison_data_Def2.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_Def2 = comparison_data_Def2.drop('Category SD', axis = 1)

comparison_data_Def2

sort_column_Def2 = 'Mean'
mean_sorted_comparison_data_Def2 = comparison_data_Def2.sort_values(by=sort_column_Def2, ascending=True)
mean_sorted_comparison_data_Def2a = comparison_data_Def2.sort_values(by=sort_column_Def2, ascending=False)
mean_sorted_comparison_data_Def2a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Def2.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Defense di Type 2')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(20, 6))
plt.errorbar(data_type2, Def_data2, yerr=Def_data2std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Defense Pokemon dalam Tipe 2')

# Display the plot

plt.show()

#Special Attack Data 1

Spa_data1 = round_data1['Sp. Atk'].to_numpy()



combined_array_Spa1 = np.stack((Spa_data1,data_type1), axis=1)
sorting_Spa1 = np.argsort(combined_array_Spa1[:,0])[::-1]
sorted_Spa1 = combined_array_Spa1[sorting_Spa1]
df_sorted_Spa1 = pd.DataFrame(sorted_Spa1)
df_sorted_Spa1.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spa1)

print()
max_sorted_Spa1 = df_sorted_Spa1.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spa1)
print()
min_sorted_Spa1 = df_sorted_Spa1.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spa1)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spa1, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spa1['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Special Attack Pokemon dalam Tipe 1')
plt.show()

Spa_data1std = round_data1std['Sp. Atk'].to_numpy()


combined_array_Spa1std = np.stack((Spa_data1std,data_type1), axis=1)
sorting_Spa1std = np.argsort(combined_array_Spa1std[:,0])[::-1]
sorted_Spa1std = combined_array_Spa1std[sorting_Spa1std]
df_sorted_Spa1std = pd.DataFrame(sorted_Spa1std)
df_sorted_Spa1std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spa1std)

print()
max_sorted_Spa1std = df_sorted_Spa1std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spa1std)
print()
min_sorted_Spa1std = df_sorted_Spa1std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spa1std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spa1std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spa1std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Special Attack Pokemon dalam Tipe 1')
plt.show()

combined_array_Spa1_alph = np.stack((data_type1,Spa_data1), axis=1)
sorting_Spa1_alph = np.argsort(combined_array_Spa1_alph[:,0])[::1]
sorted_Spa1_alph = combined_array_Spa1_alph[sorting_Spa1_alph]
df_sorted_Spa1_alph = pd.DataFrame(sorted_Spa1_alph)
df_sorted_Spa1_alph.columns = ['Category', 'Value']

combined_array_Spa1std_alph = np.stack((data_type1,Spa_data1std), axis=1)
sorting_Spa1std_alph = np.argsort(combined_array_Spa1std_alph[:,0])[::1]
sorted_Spa1std_alph = combined_array_Spa1std_alph[sorting_Spa1std_alph]
df_sorted_Spa1std_alph = pd.DataFrame(sorted_Spa1std_alph)
df_sorted_Spa1std_alph.columns = ['Category', 'Value']


comparison_data_Spa1 = pd.concat([df_sorted_Spa1_alph, df_sorted_Spa1std_alph], axis = 1)
comparison_data_Spa1.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_Spa1 = comparison_data_Spa1.drop('Category SD', axis = 1)

comparison_data_Spa1

sort_column_Spa1 = 'Mean'
mean_sorted_comparison_data_Spa1 = comparison_data_Spa1.sort_values(by=sort_column_Spa1, ascending=True)
mean_sorted_comparison_data_Spa1a = comparison_data_Spe1.sort_values(by=sort_column_Spa1, ascending=False)
mean_sorted_comparison_data_Spa1a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Spa1.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Special Attack di Type 1')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(15, 6))
plt.errorbar(data_type1, Spa_data1, yerr=Spa_data1std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Speed Attack Pokemon dalam Tipe 1')

# Display the plot

plt.show()

#Special Attack Data 2

Spa_data2 = round_data2['Sp. Atk'].to_numpy()

combined_array_Spa2 = np.stack((Spa_data2,data_type2), axis=1)
sorting_Spa2 = np.argsort(combined_array_Spa2[:,0])[::-1]
sorted_Spa2 = combined_array_Spa2[sorting_Spa2]
df_sorted_Spa2 = pd.DataFrame(sorted_Spa2)
df_sorted_Spa2.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spa2)

print()
max_sorted_Spa2 = df_sorted_Spa2.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spa2)
print()
min_sorted_Spa2 = df_sorted_Spa2.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spa2)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spa2, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spa2['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Special Attack Pokemon dalam Tipe 2')
plt.show()

Spa_data2std = round_data2std['Sp. Atk'].to_numpy()

combined_array_Spa2std = np.stack((Spa_data2std,data_type2), axis=1)
sorting_Spa2std = np.argsort(combined_array_Spa2std[:,0])[::-1]
sorted_Spa2std = combined_array_Spa2std[sorting_Spa2std]
df_sorted_Spa2std = pd.DataFrame(sorted_Spa2std)
df_sorted_Spa2std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spa2std)

print()
max_sorted_Spa2std = df_sorted_Spa2std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spa2std)
print()
min_sorted_Spa2std = df_sorted_Spa2std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spa2std)
print()
plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spa2std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spa2std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Special Attack Pokemon dalam Tipe 2')
plt.show()

combined_array_Spa2_alph = np.stack((data_type2,Spa_data2), axis=1)
sorting_Spa2_alph = np.argsort(combined_array_Spa2_alph[:,0])[::1]
sorted_Spa2_alph = combined_array_Spa2_alph[sorting_Spa2_alph]
df_sorted_Spa2_alph = pd.DataFrame(sorted_Spa2_alph)
df_sorted_Spa2_alph.columns = ['Category', 'Value']

combined_array_Spa2std_alph = np.stack((data_type2,Spa_data2std), axis=1)
sorting_Spa2std_alph = np.argsort(combined_array_Spa2std_alph[:,0])[::1]
sorted_Spa2std_alph = combined_array_Spa2std_alph[sorting_Spa2std_alph]
df_sorted_Spa2std_alph = pd.DataFrame(sorted_Spa2std_alph)
df_sorted_Spa2std_alph.columns = ['Category', 'Value']


comparison_data_Spa2 = pd.concat([df_sorted_Spa2_alph, df_sorted_Spa2std_alph], axis = 1)
comparison_data_Spa2.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_Spa2 = comparison_data_Spa2.drop('Category SD', axis = 1)

comparison_data_Spa2

sort_column_Spa2 = 'Mean'
mean_sorted_comparison_data_Spa2 = comparison_data_Spa2.sort_values(by=sort_column_Spa2, ascending=True)
mean_sorted_comparison_data_Spa2a = comparison_data_Spa2.sort_values(by=sort_column_Spa2, ascending=False)
mean_sorted_comparison_data_Spa2a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Spa2.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Special Attack di Type 2')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(20, 6))
plt.errorbar(data_type2, Spa_data2, yerr=Spa_data2std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Speed Attack Pokemon dalam Tipe 2')

# Display the plot

plt.show()

#Speed Defense Data 1

Spd_data1 = round_data1['Sp. Def'].to_numpy()

combined_array_Spd1 = np.stack((Spd_data1,data_type1), axis=1)
sorting_Spd1 = np.argsort(combined_array_Spd1[:,0])[::-1]
sorted_Spd1 = combined_array_Spd1[sorting_Spd1]
df_sorted_Spd1 = pd.DataFrame(sorted_Spd1)
df_sorted_Spd1.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spd1)

print()
max_sorted_Spd1 = df_sorted_Spd1.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spd1)
print()
min_sorted_Spd1 = df_sorted_Spd1.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spd1)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spd1, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spd1['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Special Defense Pokemon dalam Tipe 1')
plt.show()

Spd_data1std = round_data1std['Attack'].to_numpy()


combined_array_Spd1std = np.stack((Spd_data1std,data_type1), axis=1)
sorting_Spd1std = np.argsort(combined_array_Spd1std[:,0])[::-1]
sorted_Spd1std = combined_array_Spd1std[sorting_Spd1std]
df_sorted_Spd1std = pd.DataFrame(sorted_Spd1std)
df_sorted_Spd1std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spd1std)

print()
max_sorted_Spd1std = df_sorted_Spd1std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spd1std)
print()
min_sorted_Spd1std = df_sorted_Spd1std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spd1std)
plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spd1std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spd1std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Special Attack Pokemon dalam Tipe 1')
plt.show()

combined_array_Spd1_alph = np.stack((data_type1,Spd_data1), axis=1)
sorting_Spd1_alph = np.argsort(combined_array_Spd1_alph[:,0])[::1]
sorted_Spd1_alph = combined_array_Spd1_alph[sorting_Spd1_alph]
df_sorted_Spd1_alph = pd.DataFrame(sorted_Spd1_alph)
df_sorted_Spd1_alph.columns = ['Category', 'Value']

combined_array_Spd1std_alph = np.stack((data_type1,Spd_data1std), axis=1)
sorting_Spd1std_alph = np.argsort(combined_array_Spd1std_alph[:,0])[::1]
sorted_Spd1std_alph = combined_array_Spd1std_alph[sorting_Spd1std_alph]
df_sorted_Spd1std_alph = pd.DataFrame(sorted_Spd1std_alph)
df_sorted_Spd1std_alph.columns = ['Category', 'Value']


comparison_data_Spd1 = pd.concat([df_sorted_Spd1_alph, df_sorted_Spd1std_alph], axis = 1)
comparison_data_Spd1.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_Spd1 = comparison_data_Spd1.drop('Category SD', axis = 1)

comparison_data_Spd1

sort_column_Spd1 = 'Mean'
mean_sorted_comparison_data_Spd1 = comparison_data_Spd1.sort_values(by=sort_column_Spd1, ascending=True)
mean_sorted_comparison_data_Spd1a = comparison_data_Spd1.sort_values(by=sort_column_Spe1, ascending=False)
mean_sorted_comparison_data_Spd1a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Spd1.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Special Defense di Type 1')
plt.legend(['Mean', 'Standar Deviasi'], loc = 'lower right')
plt.show()

plt.figure(figsize=(15, 6))
plt.errorbar(data_type1, Spd_data1, yerr=Spd_data1std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Speed Defense Pokemon dalam Tipe 1')

# Display the plot

plt.show()

#Speed Defense Data 2

Spd_data2 = round_data2['Sp. Def'].to_numpy()

combined_array_Spd2 = np.stack((Spd_data2,data_type2), axis=1)
sorting_Spd2 = np.argsort(combined_array_Spd2[:,0])[::-1]
sorted_Spd2 = combined_array_Spd2[sorting_Spd2]
df_sorted_Spd2 = pd.DataFrame(sorted_Spd2)
df_sorted_Spd2.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spd2)

print()
max_sorted_Spd2 = df_sorted_Spd2.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spd2)
print()
min_sorted_Spd2 = df_sorted_Spd2.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spd2)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spd2, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spd2['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Special Defense Pokemon dalam Tipe 2')
plt.show()

Spd_data2std = round_data2std['Sp. Def'].to_numpy()

combined_array_Spd2std = np.stack((Spd_data2std,data_type2), axis=1)
sorting_Spd2std = np.argsort(combined_array_Spd2std[:,0])[::-1]
sorted_Spd2std = combined_array_Spd2std[sorting_Spd2std]
df_sorted_Spd2std = pd.DataFrame(sorted_Spd2std)
df_sorted_Spd2std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spd2std)

print()
max_sorted_Spd2std = df_sorted_Spd2std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spd2std)
print()
min_sorted_Spd2std = df_sorted_Spd2std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spd2std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spd1std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spd1std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Special Defense Pokemon dalam Tipe 2')
plt.show()

combined_array_Spd2_alph = np.stack((data_type2,Spd_data2), axis=1)
sorting_Spd2_alph = np.argsort(combined_array_Spd2_alph[:,0])[::1]
sorted_Spd2_alph = combined_array_Spd2_alph[sorting_Spd2_alph]
df_sorted_Spd2_alph = pd.DataFrame(sorted_Spd2_alph)
df_sorted_Spd2_alph.columns = ['Category', 'Value']

combined_array_Spd2std_alph = np.stack((data_type2,Spd_data2std), axis=1)
sorting_Spd2std_alph = np.argsort(combined_array_Spd2std_alph[:,0])[::1]
sorted_Spd2std_alph = combined_array_Spd2std_alph[sorting_Spd2std_alph]
df_sorted_Spd2std_alph = pd.DataFrame(sorted_Spd2std_alph)
df_sorted_Spd2std_alph.columns = ['Category', 'Value']


comparison_data_Spd2 = pd.concat([df_sorted_Spd2_alph, df_sorted_Spd2std_alph['Value']], axis = 1)
comparison_data_Spd2.columns = ['Category', 'Mean',  'Standar Deviasi']

comparison_data_Spd2

sort_column_Spd2 = 'Mean'
mean_sorted_comparison_data_Spd2 = comparison_data_Spd2.sort_values(by=sort_column_Spd2, ascending=True)
mean_sorted_comparison_data_Spd2a = comparison_data_Spd2.sort_values(by=sort_column_Spd2, ascending=False)
mean_sorted_comparison_data_Spd2a

plt.figure(figsize=(24, 10))
mean_sorted_comparison_data_Spd2.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Special Defense di Type 2')
plt.legend(['Mean', 'Standar Deviasi'], loc = 'lower right')
plt.show()

plt.figure(figsize=(20, 6))
plt.errorbar(data_type2, Spd_data2, yerr=Spd_data2std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Speed Defense Pokemon dalam Tipe 1')

# Display the plot

plt.show()

#Speed Data 1

Spe_data1 = round_data1['Speed'].to_numpy()

combined_array_Spe1 = np.stack((Spe_data1,data_type1), axis=1)
sorting_Spe1 = np.argsort(combined_array_Spe1[:,0])[::-1]
sorted_Spe1 = combined_array_Spe1[sorting_Spe1]
df_sorted_Spe1 = pd.DataFrame(sorted_Spe1)
df_sorted_Spe1.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spe1)

print()
max_sorted_Spe1 = df_sorted_Spe1.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spe1)
print()
min_sorted_Spe1 = df_sorted_Spe1.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spe1)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spe1, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spe1['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Speed Pokemon dalam Tipe 1')
plt.show()

Spe_data1std = round_data1std['Speed'].to_numpy()

combined_array_Spe1std = np.stack((Spe_data1std,data_type1), axis=1)
sorting_Spe1std = np.argsort(combined_array_Spe1std[:,0])[::-1]
sorted_Spe1std = combined_array_Spe1std[sorting_Spe1std]
df_sorted_Spe1std = pd.DataFrame(sorted_Spe1std)
df_sorted_Spe1std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spe1std)

print()
max_sorted_Spe1std = df_sorted_Spe1std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spe1std)
print()
min_sorted_Spe1std = df_sorted_Spe1std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spe1std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spe1std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spe1std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Speed Pokemon dalam Tipe 1')
plt.show()

combined_array_Spe1_alph = np.stack((data_type1,Spe_data1), axis=1)
sorting_Spe1_alph = np.argsort(combined_array_Spe1_alph[:,0])[::1]
sorted_Spe1_alph = combined_array_Spe1_alph[sorting_total1_alph]
df_sorted_Spe1_alph = pd.DataFrame(sorted_Spe1_alph)
df_sorted_Spe1_alph.columns = ['Category', 'Value']

combined_array_Spe1std_alph = np.stack((data_type1,Spe_data1std), axis=1)
sorting_Spe1std_alph = np.argsort(combined_array_Spe1std_alph[:,0])[::1]
sorted_Spe1std_alph = combined_array_Spe1std_alph[sorting_Spe1std_alph]
df_sorted_Spe1std_alph = pd.DataFrame(sorted_Spe1std_alph)
df_sorted_Spe1std_alph.columns = ['Category', 'Value']


comparison_data_Spe1 = pd.concat([df_sorted_Spe1_alph, df_sorted_Spe1std_alph], axis = 1)
comparison_data_Spe1.columns = ['Category', 'Mean','Category SD',  'Standar Deviasi']
comparison_data_Spe1 = comparison_data_Spe1.drop('Category SD', axis = 1)

comparison_data_Spe1

sort_column_Spe1 = 'Mean'
mean_sorted_comparison_data_Spe1 = comparison_data_Spe1.sort_values(by=sort_column_Spe1, ascending=True)
mean_sorted_comparison_data_Spe1a = comparison_data_Spe1.sort_values(by=sort_column_Spe1, ascending=False)
mean_sorted_comparison_data_Spe1a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Spe1.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Speed di Type 1')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(15, 6))
plt.errorbar(data_type1, Spe_data1, yerr=Spe_data1std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Speed Pokemon dalam Tipe 1')

# Display the plot

plt.show()

#Speed Data 2

Spe_data2 = round_data2['Speed'].to_numpy()

combined_array_Spe2 = np.stack((Spe_data2,data_type2), axis=1)
sorting_Spe2 = np.argsort(combined_array_Spe2[:,0])[::-1]
sorted_Spe2 = combined_array_Spe2[sorting_Spe2]
df_sorted_Spe2 = pd.DataFrame(sorted_Spe2)
df_sorted_Spe2.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spe2)

print()
max_sorted_Spe2 = df_sorted_Spe2.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spe2)
print()
min_sorted_Spe2 = df_sorted_Spe2.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spe2)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spe2, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spe2['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Rata-rata Speed Pokemon dalam Tipe 2')
plt.show()

Spe_data2std = round_data2std['Speed'].to_numpy()

combined_array_Spe2std = np.stack((Spe_data2std,data_type2), axis=1)
sorting_Spe2std = np.argsort(combined_array_Spe2std[:,0])[::-1]
sorted_Spe2std = combined_array_Spe2std[sorting_Spe2std]
df_sorted_Spe2std = pd.DataFrame(sorted_Spe2std)
df_sorted_Spe2std.columns = ['Value', 'Category']
print("Data Terurut :")
print(df_sorted_Spe2std)

print()
max_sorted_Spe2std = df_sorted_Spe2std.iloc[0]
print("Nilai Data Rata-Rata Attack Maksimal :")
print(max_sorted_Spe2std)
print()
min_sorted_Spe2std = df_sorted_Spe2std.iloc[-1]
print("Nilai Data Rata-Rata Attack Minimal :")
print(min_sorted_Spe2std)

plt.figure(figsize=(15, 8))
sns.barplot(data=df_sorted_Spe2std, x='Value', y='Category')
for index, value in enumerate(df_sorted_Spe2std['Value']):
    plt.text(value, index, str(value))
plt.ylabel('Jenis Pokemon')
plt.xlabel('Jangkauan Data')
plt.title('Jangkauan Data Standar Deviasi Speed Pokemon dalam Tipe 2')
plt.show()

combined_array_Spe2_alph = np.stack((data_type2,Spe_data2), axis=1)
sorting_Spe2_alph = np.argsort(combined_array_Spe2_alph[:,0])[::1]
sorted_Spe2_alph = combined_array_Spe2_alph[sorting_Spe2_alph]
df_sorted_Spe2_alph = pd.DataFrame(sorted_Spe2_alph)
df_sorted_Spe2_alph.columns = ['Category', 'Value']

combined_array_Spe2std_alph = np.stack((data_type2,Spe_data2std), axis=1)
sorting_Spe2std_alph = np.argsort(combined_array_Spe2std_alph[:,0])[::1]
sorted_Spe2std_alph = combined_array_Spe2std_alph[sorting_Spe2std_alph]
df_sorted_Spe2std_alph = pd.DataFrame(sorted_Spe2std_alph)
df_sorted_Spe2std_alph.columns = ['Category', 'Value']


comparison_data_Spe2 = pd.concat([df_sorted_Spe2_alph, df_sorted_Spe2std_alph['Value']], axis = 1)
comparison_data_Spe2.columns = ['Category', 'Mean', 'Standar Deviasi']
comparison_data_Spe2

sort_column_Spe2 = 'Mean'
mean_sorted_comparison_data_Spe2 = comparison_data_Spe2.sort_values(by=sort_column_Spe2, ascending=True)
mean_sorted_comparison_data_Spe2a = comparison_data_Spe2.sort_values(by=sort_column_Spe2, ascending=False)
mean_sorted_comparison_data_Spe2a

plt.figure(figsize=(15, 8))
mean_sorted_comparison_data_Spe2.plot(kind='barh', x='Category')


plt.xlabel('Values')
plt.ylabel('Category')
plt.title('Perbandingan Data Speed di Type 2')
plt.legend(['Mean', 'Standar Deviasi'])
plt.show()

plt.figure(figsize=(20, 6))
plt.errorbar(data_type2, Spe_data2, yerr=Spe_data2std, fmt='o')

# Add labels and title
plt.xlabel('Jenis Pokemon')
plt.ylabel('Jangkauan Data')
plt.title('Jangkauan Data Speed Pokemon dalam Tipe 2')

# Display the plot

plt.show()

pre_all_comparison_data1 = pd.concat([comparison_data_total1, comparison_data_HP1['Mean'], comparison_data_HP1['Standar Deviasi'], comparison_data_Atk1['Mean'], comparison_data_Atk1['Standar Deviasi'],comparison_data_Def1['Mean'], comparison_data_Def1['Standar Deviasi'], comparison_data_Spa1['Mean'], comparison_data_Spa1['Standar Deviasi'], comparison_data_Spd1['Mean'], comparison_data_Spd1['Standar Deviasi'], comparison_data_Spe1['Mean'], comparison_data_Spe1['Standar Deviasi']], axis = 1)
all_comparison_data1 = pd.DataFrame(pre_all_comparison_data1)
all_comparison_data1.columns = ['Category', 'Mean Total', 'Standar Deviasi Total', 'Mean HP', 'Standar Deviasi HP',  'Mean Attack', 'Standar Deviasi Attack',  'Mean Defense', 'Standar Deviasi Defense',  'Mean Special Attack', 'Standar Deviasi Special Attack',  'Mean Special Defense', 'Standar Deviasi Special Defense',  'Mean Speed', 'Standar Deviasi Speed']
round_all_comparison_data1 = all_comparison_data1.round(2)
def highlight_columns(s, color_dict):
    return [f'background-color: {color_dict.get(s.name, "")}' for _ in s]

color_column1 = {'Mean Total' : 'lightpink','Standar Deviasi Total' : 'lightpink' ,'Mean HP' : 'lightblue', 'Standar Deviasi HP' : 'lightblue', 'Mean Attack' : 'lightgreen',  'Standar Deviasi Attack' : 'lightgreen', 'Mean Defense' : 'lightyellow', 'Standar Deviasi Defense' : 'lightyellow','Mean Special Attack' : 'lightcoral','Standar Deviasi Special Attack' : 'lightcoral',
    'Mean Special Defense': 'lightcyan','Standar Deviasi Special Defense' : 'lightcyan', 'Mean Speed' :'lightgoldenrodyellow','Standar Deviasi Speed' : 'lightgoldenrodyellow'}
styled_all_comparison_data1 = round_all_comparison_data1.style.apply(highlight_columns, color_dict=color_column1)
styled_all_comparison_data1

all_plot_comparison_data1 = pd.concat([all_comparison_data1['Category'], all_comparison_data1['Mean HP'], all_comparison_data1['Mean Attack'], all_comparison_data1['Mean Defense'], all_comparison_data1['Mean Special Attack'], all_comparison_data1['Mean Special Defense'], all_comparison_data1['Mean Speed'] ], axis = 1)
all_plot_comparison_data1.columns = ['Category', 'HP', 'Attack', 'Defense', 'Sp. Atk', 'Sp. Def', 'Speed']
all_plot_comparison_data1

plt.figure(figsize=(20,8))

bar_width = 0.15  # Adjust this value as needed

# Set the positions for the bars
positions = range(len(all_plot_comparison_data1))

# Loop through each numeric column (excluding the first column)
for i, col in enumerate(all_plot_comparison_data1.columns[1:]):
    plt.bar([p + i * bar_width for p in positions], all_plot_comparison_data1[col], width=bar_width, label=col)

# Add labels and title
plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Perbandingan Data Mean tiap Kategori di Tipe 1')
plt.xticks([p + 0.4 * bar_width * (len(all_plot_comparison_data1.columns) - 1) for p in positions], all_plot_comparison_data1['Category'])
plt.legend()

pre_all_comparison_data2 = pd.concat([comparison_data_total2, comparison_data_HP2['Mean'], comparison_data_HP2['Standar Deviasi'], comparison_data_Atk2['Mean'], comparison_data_Atk2['Standar Deviasi'],comparison_data_Def2['Mean'], comparison_data_Def2['Standar Deviasi'], comparison_data_Spa2['Mean'], comparison_data_Spa2['Standar Deviasi'], comparison_data_Spd2['Mean'], comparison_data_Spd2['Standar Deviasi'], comparison_data_Spe2['Mean'], comparison_data_Spe2['Standar Deviasi']], axis = 1)
all_comparison_data2 = pd.DataFrame(pre_all_comparison_data2)
all_comparison_data2.columns = ['Category', 'Mean Total', 'Standar Deviasi Total', 'Mean HP', 'Standar Deviasi HP',  'Mean Attack', 'Standar Deviasi Attack',  'Mean Defense', 'Standar Deviasi Defense',  'Mean Special Attack', 'Standar Deviasi Special Attack',  'Mean Special Defense', 'Standar Deviasi Special Defense',  'Mean Speed', 'Standar Deviasi Speed']
round_all_comparison_data2 = all_comparison_data2.round(2)
def highlight_columns(s, color_dict):
    return [f'background-color: {color_dict.get(s.name, "")}' for _ in s]

color_column = {'Mean Total' : 'lightpink','Standar Deviasi Total' : 'lightpink' ,'Mean HP' : 'lightblue', 'Standar Deviasi HP' : 'lightblue', 'Mean Attack' : 'lightgreen',  'Standar Deviasi Attack' : 'lightgreen', 'Mean Defense' : 'lightyellow', 'Standar Deviasi Defense' : 'lightyellow','Mean Special Attack' : 'lightcoral','Standar Deviasi Special Attack' : 'lightcoral',
    'Mean Special Defense': 'lightcyan','Standar Deviasi Special Defense' : 'lightcyan', 'Mean Speed' :'lightgoldenrodyellow','Standar Deviasi Speed' : 'lightgoldenrodyellow'}
styled_all_comparison_data2 = round_all_comparison_data2.style.apply(highlight_columns, color_dict=color_column)
styled_all_comparison_data2

all_plot_comparison_data2 = pd.concat([all_comparison_data2['Category'], all_comparison_data2['Mean HP'], all_comparison_data2['Mean Attack'], all_comparison_data2['Mean Defense'], all_comparison_data2['Mean Special Attack'], all_comparison_data2['Mean Special Defense'], all_comparison_data2['Mean Speed'] ], axis = 1)
all_plot_comparison_data2.columns = ['Category', 'HP', 'Attack', 'Defense', 'Sp. Atk', 'Sp. Def', 'Speed']
all_plot_comparison_data2

plt.figure(figsize=(20,8))

bar_width = 0.15  # Adjust this value as needed

# Set the positions for the bars
positions = range(len(all_plot_comparison_data2))

# Loop through each numeric column (excluding the first column)
for i, col in enumerate(all_plot_comparison_data2.columns[1:]):
    plt.bar([p + i * bar_width for p in positions], all_plot_comparison_data2[col], width=bar_width, label=col)

# Add labels and title
plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Perbandingan Data Mean tiap Kategori di Tipe 2')
plt.xticks([p + 0.4 * bar_width * (len(all_plot_comparison_data2.columns) - 1) for p in positions], all_plot_comparison_data2['Category'])
plt.legend()

Column_Pokemon = ["Total", "HP", "Attack", "Defense", "Special Attack", "Special Defense", "Speed"]

category_max_total1 = [df_sorted_total1.iloc[0,1], df_sorted_HP1.iloc[0,1], df_sorted_Atk1.iloc[0,1], df_sorted_Def1.iloc[0,1], df_sorted_Spa1.iloc[0,1], df_sorted_Spd1.iloc[0,1], df_sorted_Spe1.iloc[0,1]]
value_max_total1 = [df_sorted_total1.iloc[0,0], df_sorted_HP1.iloc[0,0], df_sorted_Atk1.iloc[0,0], df_sorted_Def1.iloc[0,0], df_sorted_Spa1.iloc[0,0], df_sorted_Spd1.iloc[0,0], df_sorted_Spe1.iloc[0,0]]

category_min_total1 = [df_sorted_total1.iloc[-1,1], df_sorted_HP1.iloc[-1,1], df_sorted_Atk1.iloc[-1,1], df_sorted_Def1.iloc[-1,1], df_sorted_Spa1.iloc[-1,1], df_sorted_Spd1.iloc[-1,1], df_sorted_Spe1.iloc[-1,1]]
value_min_total1 = [df_sorted_total1.iloc[-1,0], df_sorted_HP1.iloc[-1,0], df_sorted_Atk1.iloc[-1,0], df_sorted_Def1.iloc[-1,0], df_sorted_Spa1.iloc[-1,0], df_sorted_Spd1.iloc[-1,0], df_sorted_Spe1.iloc[-1,0]]

category_max_total2 = [df_sorted_total2.iloc[0,1], df_sorted_HP2.iloc[0,1], df_sorted_Atk2.iloc[0,1], df_sorted_Def2.iloc[0,1], df_sorted_Spa2.iloc[0,1], df_sorted_Spd2.iloc[0,1], df_sorted_Spe2.iloc[0,1]]
value_max_total2 = [df_sorted_total2.iloc[0,0], df_sorted_HP2.iloc[0,0], df_sorted_Atk2.iloc[0,0], df_sorted_Def2.iloc[0,0], df_sorted_Spa2.iloc[0,0], df_sorted_Spd2.iloc[0,0], df_sorted_Spe2.iloc[0,0]]

category_min_total2 = [df_sorted_total2.iloc[-1,1], df_sorted_HP2.iloc[-1,1], df_sorted_Atk2.iloc[-1,1], df_sorted_Def2.iloc[-1,1], df_sorted_Spa2.iloc[-1,1], df_sorted_Spd2.iloc[-1,1], df_sorted_Spe2.iloc[-1,1]]
value_min_total2 = [df_sorted_total2.iloc[-1,0], df_sorted_HP2.iloc[-1,0], df_sorted_Atk2.iloc[-1,0], df_sorted_Def2.iloc[-1,0], df_sorted_Spa2.iloc[-1,0], df_sorted_Spd2.iloc[-1,0], df_sorted_Spe2.iloc[-1,0]]

pre_table_max_total1 = {'Kategori' : Column_Pokemon, 'Tipe' : category_max_total1, 'Nilai' : value_max_total1}
table_max_total1 = pd.DataFrame(pre_table_max_total1)
print("Perbandingan Nilai Rata-Rata Tertinggi di Tipe 1")
print(table_max_total1)
print()

pre_table_min_total1 = {'Kategori' : Column_Pokemon, 'Tipe' : category_min_total1, 'Nilai' : value_min_total1}
table_min_total1 = pd.DataFrame(pre_table_min_total1)
print("Perbandingan Nilai Rata-Rata Terendah di Tipe 1")
print(table_min_total1)
print()

pre_table_max_total2 = {'Kategori' : Column_Pokemon, 'Tipe' : category_max_total2, 'Nilai' : value_max_total2}
table_max_total2 = pd.DataFrame(pre_table_max_total2)
print("Perbandingan Nilai Rata-Rata Tertinggi di Tipe 2")
print(table_max_total2)
print()

pre_table_min_total2 = {'Kategori' : Column_Pokemon, 'Tipe' : category_min_total2, 'Nilai' : value_min_total2}
table_min_total2 = pd.DataFrame(pre_table_min_total2)
print("Perbandingan Nilai Rata-Rata Terendah di Tipe 2")
print(table_min_total2)
print()

category_max_total1std = [df_sorted_total1std.iloc[0,1], df_sorted_HP1std.iloc[0,1], df_sorted_Atk1std.iloc[0,1], df_sorted_Def1std.iloc[0,1], df_sorted_Spa1std.iloc[0,1], df_sorted_Spd1std.iloc[0,1], df_sorted_Spe1std.iloc[0,1]]
value_max_total1std = [df_sorted_total1std.iloc[0,0], df_sorted_HP1std.iloc[0,0], df_sorted_Atk1std.iloc[0,0], df_sorted_Def1std.iloc[0,0], df_sorted_Spa1std.iloc[0,0], df_sorted_Spd1std.iloc[0,0], df_sorted_Spe1std.iloc[0,0]]

category_min_total1std = [df_sorted_total1std.iloc[-1,1], df_sorted_HP1std.iloc[-1,1], df_sorted_Atk1std.iloc[-1,1], df_sorted_Def1std.iloc[-1,1], df_sorted_Spa1std.iloc[-1,1], df_sorted_Spd1std.iloc[-1,1], df_sorted_Spe1std.iloc[-1,1]]
value_min_total1std = [df_sorted_total1std.iloc[-1,0], df_sorted_HP1std.iloc[-1,0], df_sorted_Atk1std.iloc[-1,0], df_sorted_Def1std.iloc[-1,0], df_sorted_Spa1std.iloc[-1,0], df_sorted_Spd1std.iloc[-1,0], df_sorted_Spe1std.iloc[-1,0]]

category_max_total2std = [df_sorted_total2std.iloc[0,1], df_sorted_HP2std.iloc[0,1], df_sorted_Atk2std.iloc[0,1], df_sorted_Def2std.iloc[0,1], df_sorted_Spa2std.iloc[0,1], df_sorted_Spd2std.iloc[0,1], df_sorted_Spe2std.iloc[0,1]]
value_max_total2std = [df_sorted_total2std.iloc[0,0], df_sorted_HP2std.iloc[0,0], df_sorted_Atk2std.iloc[0,0], df_sorted_Def2std.iloc[0,0], df_sorted_Spa2std.iloc[0,0], df_sorted_Spd2std.iloc[0,0], df_sorted_Spe2std.iloc[0,0]]

category_min_total2std = [df_sorted_total2std.iloc[-1,1], df_sorted_HP2std.iloc[-1,1], df_sorted_Atk2std.iloc[-1,1], df_sorted_Def2std.iloc[-1,1], df_sorted_Spa2std.iloc[-1,1], df_sorted_Spd2std.iloc[-1,1], df_sorted_Spe2std.iloc[-1,1]]
value_min_total2std = [df_sorted_total2std.iloc[-1,0], df_sorted_HP2std.iloc[-1,0], df_sorted_Atk2std.iloc[-1,0], df_sorted_Def2std.iloc[-1,0], df_sorted_Spa2std.iloc[-1,0], df_sorted_Spd2std.iloc[-1,0], df_sorted_Spe2std.iloc[-1,0]]

pre_table_max_total1std = {'Kategori' : Column_Pokemon, 'Tipe' : category_max_total1std, 'Nilai' : value_max_total1std}
table_max_total1std = pd.DataFrame(pre_table_max_total1std)
print("Perbandingan Nilai Standar Deviasi Tertinggi di Tipe 1")
print(table_max_total1std)
print()

pre_table_min_total1std = {'Kategori' : Column_Pokemon, 'Tipe' : category_min_total1std, 'Nilai' : value_min_total1std}
table_min_total1std = pd.DataFrame(pre_table_min_total1std)
print("Perbandingan Nilai Standar Deviasi Terendah di Tipe 1")
print(table_min_total1std)
print()

pre_table_max_total2std = {'Kategori' : Column_Pokemon, 'Tipe' : category_max_total2std, 'Nilai' : value_max_total2std}
table_max_total2std = pd.DataFrame(pre_table_max_total2std)
print("Perbandingan Nilai Standar Deviasi Tertinggi di Tipe 2")
print(table_max_total2std)
print()

pre_table_min_total2std = {'Kategori' : Column_Pokemon, 'Tipe' : category_min_total2std, 'Nilai' : value_min_total2std}
table_min_total2std = pd.DataFrame(pre_table_min_total2std)
print("Perbandingan Nilai Standar Deviasi Terendah di Tipe 2")
print(table_min_total2std)
print()



import seaborn as sns

sns.scatterplot(data=new_data, x="Attack", y="Defense", hue="Type 1")

sns.scatterplot(data=new_data, x="Attack", y="Defense", hue="Type 2")

sns.scatterplot(data=new_data, x="Attack", y="Sp. Atk", hue="Type 1")

sns.scatterplot(data=new_data, x="Attack", y="Sp. Atk", hue="Type 2")

sns.scatterplot(data=new_data, x="Defense", y="Sp. Def", hue="Type 1")

sns.scatterplot(data=new_data, x="Defense", y="Sp. Def", hue="Type 2")

import matplotlib.pyplot as plt

"""# New Section"""